/* Generated by opensource COBOL 4J 1.1.2 */
import java.io.UnsupportedEncodingException;
import jp.osscons.opensourcecobol.libcobj.*;
import jp.osscons.opensourcecobol.libcobj.common.*;
import jp.osscons.opensourcecobol.libcobj.data.*;
import jp.osscons.opensourcecobol.libcobj.exceptions.*;
import jp.osscons.opensourcecobol.libcobj.termio.*;
import jp.osscons.opensourcecobol.libcobj.call.*;
import jp.osscons.opensourcecobol.libcobj.file.*;
import jp.osscons.opensourcecobol.libcobj.ui.*;
import java.util.Optional;
import java.lang.NullPointerException;
import java.lang.IndexOutOfBoundsException;

public class AUTODELETE implements CobolRunnable {

  private boolean initialized = false;
  private CobolModule module;
  private int entry;

  private CobolRunnable cob_unifunc;


  @Override
  public int run(CobolDataStorage... argStorages) {
    return AUTODELETE_(0, argStorages);
  }

  @Override
  public void cancel() {
    AUTODELETE_(-1);
  }

  @Override
  public boolean isActive() {
    return false;
  }

  public CobolResultSet execute () {
    int returnCode = run_module(0);
    return new CobolResultSet(returnCode);
  }

  public int AUTODELETE_ (int entry, CobolDataStorage ...argStorages) {
    this.entry = entry;
    return this.run_module(entry);
  }

  int run_module (int entry) {
    this.module = new CobolModule(null, null, null, null, 0, '.', '$', ',', 1, 1, 1, 0, null );

    /* Start of function code */

    /* CANCEL callback handling */
    if (entry < 0) {
    	if (!this.initialized) {
    		CobolDecimal.cobInitNumeric();
    		return 0;
    	}
    	h_OLDFILE.close (0, null);
    	h_NEWFILE.close (0, null);
    	this.initialized = false;
    	return 0;
    }

    /* Push module stack */
    CobolModule.push (module);

    /* Initialize program */
    if (!this.initialized) {
      module.setProgramId("AUTODELETE");

      b_RETURN_CODE.set((int)0);
      b_OLD_STS.fillBytes(' ', 2);
      b_NEW_STS.fillBytes(' ', 2);
      b_OLD_FILE_PATH.fillBytes(' ', 256);
      b_NEW_FILE_PATH.fillBytes(' ', 256);
      b_MD_NAME.fillBytes(' ', 250);
      b_WS_END_OF_FILE.setByte(0, 'N');      b_WS_IN_NAVI_SECTION.setByte(0, 'N');
      h_OLDFILE = CobolFileFactory.makeCobolFileInstance(
      /* select_name = */ "OLDFILE",
      /* file_status = */ h_OLDFILE_status,
      /* assign = */ f_OLD_FILE_PATH,
      /* record = */ f_OLDFILE_record,
      /* record_size = */ null,
      /* record_min = */ 0,
      /* record_max = */ 50000,
      /* nkeys = */ 0,
      /* keys = */ null,
      /* organization = */ (char)1,
      /* access_mode = */ (char)1,
      /* lock_mode = */ (char)0,
      /* open_mode = */ (char)0,
      /* flag_optional = */ false,
      /* last_open_mode = */ (char)0,
      /* special = */ (char)0,
      /* flag_nonexistent = */ false,
      /* flag_end_of_file = */ false,
      /* flag_begin_of_file = */ false,
      /* flag_first_read = */ (char)0,
      /* flag_read_done = */ false,
      /* flag_select_features = */ (char)1,
      /* flag_needs_nl = */ false,
      /* flag_needs_top = */ false,
      /* file_version = */ (char)0
      );
      h_NEWFILE = CobolFileFactory.makeCobolFileInstance(
      /* select_name = */ "NEWFILE",
      /* file_status = */ h_NEWFILE_status,
      /* assign = */ f_NEW_FILE_PATH,
      /* record = */ f_NEWFILE_record,
      /* record_size = */ null,
      /* record_min = */ 0,
      /* record_max = */ 50000,
      /* nkeys = */ 0,
      /* keys = */ null,
      /* organization = */ (char)1,
      /* access_mode = */ (char)1,
      /* lock_mode = */ (char)0,
      /* open_mode = */ (char)0,
      /* flag_optional = */ false,
      /* last_open_mode = */ (char)0,
      /* special = */ (char)0,
      /* flag_nonexistent = */ false,
      /* flag_end_of_file = */ false,
      /* flag_begin_of_file = */ false,
      /* flag_first_read = */ (char)0,
      /* flag_read_done = */ false,
      /* flag_select_features = */ (char)1,
      /* flag_needs_nl = */ false,
      /* flag_needs_top = */ false,
      /* file_version = */ (char)0
      );

      this.initialized = true;
    }
    /* PROCEDURE DIVISION */
    try{
      CobolStopRunException.dummy();
      CobolGoBackException.dummy();
      /* Entry dispatch */
      execEntry(l_AUTODELETE);

    } catch(CobolGoBackException e) {
      return e.getReturnCode();
    } catch(CobolStopRunException e) {
      CobolStopRunException.stopRun();
      System.exit(e.getReturnCode());
    }
    /* Pop module stack */
    CobolModule.pop();

    /* Program return */
    return b_RETURN_CODE.intValue();
  }
  public CobolControl[] contList = {
    new CobolControl(0, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {

        return Optional.of(contList[l_AUTODELETE]);
      }
    },
    /* Entry AUTODELETE */
    new CobolControl(l_AUTODELETE, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {

        return Optional.of(contList[l_MAIN_CONTROL]);
      }
    },
    /* MAIN-CONTROL SECTION */
    new CobolControl(l_MAIN_CONTROL, CobolControl.LabelType.section) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {

        return Optional.of(contList[l_MAIN_CONTROL__MAIN_000]);
      }
    },
    /* MAIN-000 */
    new CobolControl(l_MAIN_CONTROL__MAIN_000, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* AUTODELETE.cbl:49: ACCEPT */
        {
          CobolTerminal.acceptCommandLine (f_MD_NAME);
        }
        /* AUTODELETE.cbl:51: MOVE */
        {
          b_OLD_FILE_PATH.fillBytes (32, 256);
        }
        /* AUTODELETE.cbl:52: STRING */
        {
          CobolString.stringInit (f_OLD_FILE_PATH, 0);
          CobolString.stringDelimited (0);
          CobolString.stringAppend (c_1_old_delete);
          CobolString.stringDelimited (CobolConstant.space);
          CobolString.stringAppend (f_MD_NAME);
          CobolString.stringFinish ();
        }
        /* AUTODELETE.cbl:55: MOVE */
        {
          b_NEW_FILE_PATH.fillBytes (32, 256);
        }
        /* AUTODELETE.cbl:56: STRING */
        {
          CobolString.stringInit (f_NEW_FILE_PATH, 0);
          CobolString.stringDelimited (0);
          CobolString.stringAppend (c_2_new_delete);
          CobolString.stringDelimited (CobolConstant.space);
          CobolString.stringAppend (f_MD_NAME);
          CobolString.stringFinish ();
        }
        /* AUTODELETE.cbl:60: IF */
        {
          if (((long)f_OLD_FILE_PATH.compareTo (CobolConstant.space) == 0L))
            {
              /* AUTODELETE.cbl:60: GO TO */
              {
                if(true) return Optional.of(contList[l_MAIN_CONTROL__MAIN_900                ]);

              }
            }
        }
        /* AUTODELETE.cbl:62: OPEN */
        {
          CobolRuntimeException.code = 0;
          {
            h_OLDFILE.open (1, 0, f_OLD_STS);
          }
          if (CobolRuntimeException.code != 0)
            {
              /* PERFORM Default Error Handler */
              CobolControl.perform(contList, l_Default_Error_Handler).run();
            }
          CobolRuntimeException.code = 0;
          {
            h_NEWFILE.open (2, 1, f_NEW_STS);
          }
          if (CobolRuntimeException.code != 0)
            {
              /* PERFORM Default Error Handler */
              CobolControl.perform(contList, l_Default_Error_Handler).run();
            }
        }

        return Optional.of(contList[l_MAIN_CONTROL__MAIN_100]);
      }
    },
    /* MAIN-100 */
    new CobolControl(l_MAIN_CONTROL__MAIN_100, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* AUTODELETE.cbl:65: PERFORM */
        for (;;)
          {
            if (((long)(Byte.toUnsignedInt(b_WS_END_OF_FILE.getByte(0)) - (int)89) == 0L))
              break;
            {
              /* AUTODELETE.cbl:67: READ */
              CobolRuntimeException.code = 0;
              {
                h_OLDFILE.read (0, f_OLD_STS, 1);
              }
              if (CobolRuntimeException.code != 0)
                {
                  if (CobolRuntimeException.code == 0x0501)
                    {
                      {
                        /* AUTODELETE.cbl:70: MOVE */
                        {
                          b_WS_END_OF_FILE.setByte(89);
                        }
                      }
                    }
                  else
                    {
                      /* PERFORM Default Error Handler */
                      CobolControl.perform(contList, l_Default_Error_Handler).run();
                    }
                }
              else
                {
                  b_OLD_REC.setBytes (b_OLDFILE_record, 50000);
                  {
                    /* AUTODELETE.cbl:73: IF */
                    {
                      if ((((long)f_OLD_REC.compareTo (c_3) == 0L) || ((long)f_OLD_REC.compareTo (c_4) == 0L)))
                        {
                          /* AUTODELETE.cbl:75: MOVE */
                          {
                            b_WS_IN_NAVI_SECTION.setByte(89);
                          }
                          /* AUTODELETE.cbl:76: EXIT */
                          {
                            if(true) continue;
                          }
                        }
                    }
                    /* AUTODELETE.cbl:78: IF */
                    {
                      if ((((long)f_OLD_REC.compareTo (c_5) == 0L) || ((long)f_OLD_REC.compareTo (c_6) == 0L)))
                        {
                          /* AUTODELETE.cbl:80: MOVE */
                          {
                            b_WS_IN_NAVI_SECTION.setByte(78);
                          }
                          /* AUTODELETE.cbl:81: EXIT */
                          {
                            if(true) continue;
                          }
                        }
                    }
                    /* AUTODELETE.cbl:84: IF */
                    {
                      if (((long)(Byte.toUnsignedInt(b_WS_IN_NAVI_SECTION.getByte(0)) - (int)78) == 0L))
                        {
                          /* AUTODELETE.cbl:85: WRITE */
                          CobolRuntimeException.code = 0;
                          {
                            b_NEW_REC.setBytes (b_OLD_REC, 50000);
                            h_NEWFILE.write (f_NEW_REC, 2162689, f_NEW_STS);
                          }
                          if (CobolRuntimeException.code != 0)
                            {
                              /* PERFORM Default Error Handler */
                              CobolControl.perform(contList, l_Default_Error_Handler).run();
                            }
                        }
                    }
                  }
                }
            }
          }
        /* AUTODELETE.cbl:90: CLOSE */
        {
          CobolRuntimeException.code = 0;
          {
            h_NEWFILE.close (0, f_NEW_STS);
          }
          if (CobolRuntimeException.code != 0)
            {
              /* PERFORM Default Error Handler */
              CobolControl.perform(contList, l_Default_Error_Handler).run();
            }
        }
        /* AUTODELETE.cbl:91: CLOSE */
        {
          CobolRuntimeException.code = 0;
          {
            h_OLDFILE.close (0, f_OLD_STS);
          }
          if (CobolRuntimeException.code != 0)
            {
              /* PERFORM Default Error Handler */
              CobolControl.perform(contList, l_Default_Error_Handler).run();
            }
        }

        return Optional.of(contList[l_MAIN_CONTROL__MAIN_900]);
      }
    },
    /* MAIN-900 */
    new CobolControl(l_MAIN_CONTROL__MAIN_900, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
        /* AUTODELETE.cbl:94: STOP */
        {
          CobolStopRunException.throwException (b_RETURN_CODE.intValue());
        }


        return Optional.of(CobolControl.pure());
      }
    },
    /* Default Error Handler */
    new CobolControl(l_Default_Error_Handler, CobolControl.LabelType.label) {
      public Optional<CobolControl> run() throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {

        if ((CobolFile.errorFile.flag_select_features & CobolFile.COB_SELECT_FILE_STATUS) == 0) {
        	CobolFile.defaultErrorHandle ();
        	CobolStopRunException.stopRunAndThrow (1);
        }

        return Optional.of(CobolControl.pure());
      }
    },
    CobolControl.pure()
  };
  public void execEntry(int start) throws CobolRuntimeException, CobolGoBackException, CobolStopRunException {
    Optional<CobolControl> nextLabel = Optional.of(contList[start]);
    while(nextLabel.isPresent()) {
      CobolControl section = nextLabel.get();
      nextLabel = section.run();
    }
  }

  public static void main(String[] args)
  {
    CobolUtil.cob_init(args, false);
    CobolDecimal.cobInitNumeric();
    new AUTODELETE().AUTODELETE_(0);
    CobolStopRunException.stopRun();
  }

  public AUTODELETE()
  {
    init();
  }

  public void init() 
  {
    try {
      /* Data storage */

      cob_unifunc = null;

      /* PROGRAM-ID : AUTODELETE */
      b_RETURN_CODE = new CobolDataStorage(4);	/* RETURN-CODE */
      b_OLDFILE_record = new CobolDataStorage(50000);	/* OLDFILE_record */
      b_NEWFILE_record = new CobolDataStorage(50000);	/* NEWFILE_record */
      b_OLD_STS = new CobolDataStorage(2);	/* OLD-STS */
      b_NEW_STS = new CobolDataStorage(2);	/* NEW-STS */
      b_OLD_FILE_PATH = new CobolDataStorage(256);	/* OLD-FILE-PATH */
      b_NEW_FILE_PATH = new CobolDataStorage(256);	/* NEW-FILE-PATH */
      b_MD_NAME = new CobolDataStorage(250);	/* MD-NAME */
      b_WS_END_OF_FILE = new CobolDataStorage(1);	/* WS-END-OF-FILE */
      b_WS_IN_NAVI_SECTION = new CobolDataStorage(1);	/* WS-IN-NAVI-SECTION */
      b_NEW_REC = b_NEWFILE_record;
      b_OLD_REC = b_OLDFILE_record;

      /* End of data storage */


      initAttr();

      /* Fields */

      /* PROGRAM-ID : AUTODELETE */
      f_OLD_REC	= CobolFieldFactory.makeCobolField(50000, b_OLD_REC, a_1);	/* OLD-REC */
      f_OLDFILE_record	= CobolFieldFactory.makeCobolField(50000, b_OLDFILE_record, a_1);	/* OLDFILE_record */
      f_NEW_REC	= CobolFieldFactory.makeCobolField(50000, b_NEW_REC, a_1);	/* NEW-REC */
      f_NEWFILE_record	= CobolFieldFactory.makeCobolField(50000, b_NEWFILE_record, a_1);	/* NEWFILE_record */
      f_OLD_STS	= CobolFieldFactory.makeCobolField(2, b_OLD_STS, a_1);	/* OLD-STS */
      f_NEW_STS	= CobolFieldFactory.makeCobolField(2, b_NEW_STS, a_1);	/* NEW-STS */
      f_OLD_FILE_PATH	= CobolFieldFactory.makeCobolField(256, b_OLD_FILE_PATH, a_1);	/* OLD-FILE-PATH */
      f_NEW_FILE_PATH	= CobolFieldFactory.makeCobolField(256, b_NEW_FILE_PATH, a_1);	/* NEW-FILE-PATH */
      f_MD_NAME	= CobolFieldFactory.makeCobolField(250, b_MD_NAME, a_1);	/* MD-NAME */

      /* End of fields */


      /* Constants */

      c_1_old_delete	= CobolFieldFactory.makeCobolField(11, str_0_old_delete, a_1);
      c_2_new_delete	= CobolFieldFactory.makeCobolField(11, str_1_new_delete, a_1);
      c_3	= CobolFieldFactory.makeCobolField(18, str_2, a_1);
      c_4	= CobolFieldFactory.makeCobolField(18, str_3, a_1);
      c_5	= CobolFieldFactory.makeCobolField(16, str_4, a_1);
      c_6	= CobolFieldFactory.makeCobolField(16, str_5, a_1);

    } catch(NullPointerException e) {
      System.out.println("Error - NullpointerException");
    } catch(IndexOutOfBoundsException e) {
      System.out.println("Error - IndexOutOfBoundsException");
    }
  }

  private void initAttr() {
    /* Attributes */

    a_1 = new CobolFieldAttribute (33, 0, 0, 0, null);

  }

  /* Data storage */

  /* PROGRAM-ID : AUTODELETE */
  private CobolDataStorage b_RETURN_CODE;	/* RETURN-CODE */
  private CobolDataStorage b_OLDFILE_record;	/* OLDFILE_record */
  private CobolDataStorage b_NEWFILE_record;	/* NEWFILE_record */
  private CobolDataStorage b_OLD_STS;	/* OLD-STS */
  private CobolDataStorage b_NEW_STS;	/* NEW-STS */
  private CobolDataStorage b_OLD_FILE_PATH;	/* OLD-FILE-PATH */
  private CobolDataStorage b_NEW_FILE_PATH;	/* NEW-FILE-PATH */
  private CobolDataStorage b_MD_NAME;	/* MD-NAME */
  private CobolDataStorage b_WS_END_OF_FILE;	/* WS-END-OF-FILE */
  private CobolDataStorage b_WS_IN_NAVI_SECTION;	/* WS-IN-NAVI-SECTION */
  private CobolDataStorage b_NEW_REC;
  private CobolDataStorage b_OLD_REC;

  /* End of data storage */


  /* Fields */

  /* PROGRAM-ID : AUTODELETE */
  private AbstractCobolField f_OLD_REC;	/* OLD-REC */
  private AbstractCobolField f_OLDFILE_record;	/* OLDFILE_record */
  private AbstractCobolField f_NEW_REC;	/* NEW-REC */
  private AbstractCobolField f_NEWFILE_record;	/* NEWFILE_record */
  private AbstractCobolField f_OLD_STS;	/* OLD-STS */
  private AbstractCobolField f_NEW_STS;	/* NEW-STS */
  private AbstractCobolField f_OLD_FILE_PATH;	/* OLD-FILE-PATH */
  private AbstractCobolField f_NEW_FILE_PATH;	/* NEW-FILE-PATH */
  private AbstractCobolField f_MD_NAME;	/* MD-NAME */

  /* End of fields */


  private static AbstractCobolField f_native;

  /* Constants */

  private AbstractCobolField c_6;
  private AbstractCobolField c_5;
  private AbstractCobolField c_4;
  private AbstractCobolField c_3;
  private AbstractCobolField c_2_new_delete;
  private AbstractCobolField c_1_old_delete;

  /* Attributes */

  private CobolFieldAttribute a_1;



  /* String literals */
  public static final byte[] str_5 = CobolUtil.stringToBytes("<!--navi end2-->");
  public static final byte[] str_4 = CobolUtil.stringToBytes("<!--navi end1-->");
  public static final byte[] str_3 = CobolUtil.stringToBytes("<!--navi start2-->");
  public static final byte[] str_2 = CobolUtil.stringToBytes("<!--navi start1-->");
  public static final byte[] str_1_new_delete = CobolUtil.stringToBytes("new_delete/");
  public static final byte[] str_0_old_delete = CobolUtil.stringToBytes("old_delete/");
  /* File OLDFILE */
  private CobolFile		h_OLDFILE = null;
  private byte[]	h_OLDFILE_status = new byte[4];
  /* File NEWFILE */
  private CobolFile		h_NEWFILE = null;
  private byte[]	h_NEWFILE_status = new byte[4];

  /* Sections and Labels */
  private final static int l_AUTODELETE = 1;
  private final static int l_MAIN_CONTROL = 2;
  private final static int l_MAIN_CONTROL__MAIN_000 = 3;
  private final static int l_MAIN_CONTROL__MAIN_100 = 4;
  private final static int l_MAIN_CONTROL__MAIN_900 = 5;
  private final static int l_Default_Error_Handler = 6;

}
